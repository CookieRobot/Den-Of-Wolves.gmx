<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//application_surface_draw_enable(false);

//global.MonitorW = display_get_width();
//global.MonitorH = display_get_height();

//global.Xoffset=(window_get_width()-800)/2;
//global.Yoffset=(window_get_height()-600)/2;

window_set_size(800, 600);

go_a = 0; 
bs_a = 0;

map = ds_grid_create(20, 20);
curArea = 000000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DEBUG ONLY
Debug_KILLKEY = keyboard_check_pressed(ord("K"));

if(debug_mode){
    if(Debug_KILLKEY){
        with(obj_player){
            p_state = p_states.dead;
        }
    }
}

/*if(window_get_fullscreen()){
    if(global.MonitorW&gt;=1280 &amp;&amp; global.MonitorH&gt;=720) {
        surface_resize(application_surface,1280,720)
        global.Xoffset=(global.MonitorW-1280)/2;
        global.Yoffset=(global.MonitorH-720)/2;
    }
    
    if(global.MonitorW&gt;=1024 &amp;&amp; global.MonitorH&gt;=756) {
        surface_resize(application_surface,1024,756)
        global.Xoffset=(global.MonitorW-1024)/2;
        global.Yoffset=(global.MonitorH-756)/2;
    }
} else {
    global.Xoffset=(window_get_width()-800)/2;
    global.Yoffset=(window_get_height()-600)/2;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_surface_ext(application_surface,global.Xoffset,global.Yoffset,1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Game-Over Screen If Player Is Dead
if(obj_player.p_state = obj_player.p_states.dead){
    if(bs_a &lt; 1) bs_a+=0.05;
    else if(bs_a = 1) &amp;&amp; (go_a &lt; 1) go_a+=0.05;
    
    var view_midw = surface_get_width(application_surface)/2;
    var view_midh = surface_get_height(application_surface)/2;
    
    draw_set_alpha(bs_a);
    draw_set_color(c_black);
    
    draw_rectangle(view_xport, view_yport, surface_get_width(application_surface), surface_get_height(application_surface), false);
    draw_sprite_ext(spr_gameover, 1, view_midw, view_midh - 160, 3, 3, 0, c_white, go_a);
    
    draw_set_alpha(1);
    draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
