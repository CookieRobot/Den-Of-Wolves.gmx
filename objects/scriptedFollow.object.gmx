<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player = instance_find(obj_player,0);
followPathsIni(16,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>followPathsStep();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//draw_text(x,y-48,"Path: " + string(path_position))
//draw_text(x,y-68,"Pos: " + string(x)+", "+string(y));



var nearestTest;
nearestHold = findClosestPath(x,y,size);
for (i = 0; i&lt;6;i++;){nearestTest[i] = nearestHold[i];}

draw_rectangle_colour(nearestTest[0], nearestTest[1], 
    nearestTest[0]-8, nearestTest[1]-8, 
    c_teal, c_gray, c_teal, c_teal, false);





if (nearestPath != noone)
{
    draw_text(x,y-72,"Distance to path: " + 
    string(point_distance(x,y,nearestPath[0], nearestPath[1])))
    
    
    if (point_distance(x,y,nearestPath[0], nearestPath[1])&gt;7)
    {
    draw_rectangle_colour(nearestPath[0], nearestPath[1], 
    nearestPath[0]+8, nearestPath[1]-8, 
    c_blue, c_blue, c_blue, c_blue, false);
    }
    else
    {
        draw_rectangle_colour(nearestPath[0], nearestPath[1], 
    nearestPath[0]+8, nearestPath[1]-8, 
    c_gray, c_gray, c_gray, c_gray, c_gray);
    }
}

if (pathDestination!= noone)
{
    
    draw_rectangle_colour(pathDestination[0], pathDestination[1], 
    pathDestination[0]+8, pathDestination[1]+8, 
    c_green, c_green, c_green, c_green, false);

}

if (destination[0]!= noone)
{
    
    draw_rectangle_colour(destination[0], destination[1], 
    destination[0]+8, destination[1]+8, 
    c_fuchsia, c_fuchsia, c_fuchsia, c_fuchsia, false);
    
    
    validateGotoPathDraw(x,y,destination[0],destination[1],16)

}

for (var a = 0;a&lt; array_height_2d(instructionPath);a++)
{

    for (var b = 0;b&lt;array_length_2d(instructionPath,a);b++)
    {
        if (instructionPath[a,b]&gt;-1)
        {
            color = c_purple;
            if a == array_height_2d(instructionPath) 
            {
                color = c_red;
            }
            if a == array_height_2d(instructionPath)-1 
            {
                color = c_green;
            }
            //drawinstruction path
            xDraw = path_points[instructionPath[a,b],0]
            yDraw = path_points[instructionPath[a,b],1]
            draw_rectangle_colour(xDraw, yDraw, 
            xDraw+8, yDraw+8, 
            color, color, color, color, false);
            if(a+1&lt; array_height_2d(instructionPath))
            {
                xDraw = path_points[instructionPath[a,0],0]
                yDraw = path_points[instructionPath[a,0],1]
                xDraw2 = path_points[instructionPath[a+1,1],0]
                yDraw2 = path_points[instructionPath[a+1,1],1]
                
                draw_line_color(xDraw,yDraw,xDraw2,yDraw2,
                c_purple, c_purple)
            
            
            }
        }
    }
    
}

if (nearestPath!=noone)
{
    draw_rectangle_colour(nearestPath[0], nearestPath[1], 
    nearestPath[0]-8, nearestPath[1]-8, 
    c_red, c_red, c_red, c_red, false);
}

if (pathDestination!=noone)
{
    draw_rectangle_colour(pathDestination[0], pathDestination[1], 
    pathDestination[0]-8, pathDestination[1]+8, 
    c_green, c_green, c_green, c_green, c_green);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="79">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>followPathsStart(player.x,player.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
