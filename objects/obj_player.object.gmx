<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Health = 100;

//
xSpd = 0;
ySpd = 0;

rSpd = 4;
mSpd = 3;
sSpd = 2;

noise_sound = snd_footstep;
noise_radius = 256;

enum p_dirs {
    forward = 0,
    right = 1,
    down = 2,
    left = 3
}

p_dir = p_dirs.forward;

// States
enum p_states {
    normal = 0,
    cutscene = 1,
    dead = 2
}

p_state = p_states.normal;

// Combat
locked_on = noone;

// Inventory
global.keyitems = ds_list_create();
global.consumables = ds_list_create();
global.passiveitems = ds_list_create();

ds_list_add(global.keyitems, 0);
ds_list_add(global.consumables, 0);
ds_list_add(global.passiveitems, 0);

// Equipped Items
eq_key = 0;
eq_weapon = 40;

eq_consumable = 0;
consum_pos = 0;

eq_passive = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Call Stealth Kill Script
StealthKill(locked_on);
enemy = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GenerateNoise(x, y, noise_radius, 8, noise_sound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Get Keyboard Inputs
RightMove = global.Right_Pressed;
DownMove = global.Down_Pressed;
LeftMove = global.Left_Pressed;
UpMove = global.Up_Pressed;

Sneak = global.Aim_Press;
Run = global.Run_Press;

Activate = global.Context_Press;

Attack = global.Attack_Pressed;
Attack_RLS = global.Attack_Release;

UseConsumable = global.Item_Press;

// Switch State If Player Is Dead
if(Health &lt;= 0){
    p_state = p_states.dead;
}

switch(p_state){
    case 0:
        PlayerNormal();
    break;
    
    case 1:
        
    break;
    
    case 2:
    
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Inventory Squares
// Key
draw_sprite_ext(spr_invsquare, 1, view_xport+32, view_yport+32, 2, 2, 0, c_white, 1);

draw_sprite_ext(ItemList(eq_key, 2), 1, view_xport+32, view_yport+32, 2, 2, 0, c_white, 1);

// Weapon
draw_sprite_ext(spr_invsquare, 1, view_xport+98, view_yport + 32, 2, 2, 0, c_white, 1);

draw_sprite_ext(ItemList(eq_weapon, 2), 1, view_xport+98, view_yport + 32, 2, 2, 0, c_white, 1);

// Passive
draw_sprite_ext(spr_invsquare, 1, view_xport+164, view_yport + 32, 2, 2, 0, c_white, 1);

draw_sprite_ext(ItemList(eq_passive, 2), 1, view_xport+164, view_yport+32, 2, 2, 0, c_white, 1);

// Consumable
draw_sprite_ext(spr_invsquare, 1, view_xport+230, view_yport + 32, 2, 2, 0, c_white, 1);

draw_sprite_ext(ItemList(eq_consumable, 2), 1, view_xport+230, view_yport+32, 2, 2, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if(locked_on != noone &amp;&amp; Sneak)
    draw_sprite(spr_arrow, 1, locked_on.x + 16, locked_on.y - 48);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
